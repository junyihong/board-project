debug: false

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com.junyihong.boardproject: debug
    org.springframework.web.servlet: debug

    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  sql:
    init:
      mode: always
  data:
    rest:
      base-path: /api
      detection-strategy: annotated
  thymeleaf3.decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

server:
  error:
    whitelabel:
      enabled: false
# 에러 상태 코드별로 커스텀 에러 페이지를 설정.
error:
  path: /error
  status:
    400: /error
    401: /error
    403: /error
    404: /error
    500: /error



# 어노테이션으로 명시한 REST API만 노출시킨다.
#    url: jdbc:h2:mem:testdb
#    username: sa
#    driver-class-name: org.h2.Driver
#  h2:
#    console:
#      enabled: true
---

#spring:
#  config:
#    activate:
#      on-cloud-platform: testdb
#  datasource:
#    url: jdbc:h2:mem:board;mode=mysql
#    driverClassName: org.h2.Driver
#  sql.init.mode: always
#  test.database.replace: none

---

spring:
  config:
    activate:
      on-profile: heroku
  datasource:
    url: ${JAWSDB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
  sql:
    init:
      mode: always